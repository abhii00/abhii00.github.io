{"version":3,"sources":["components/App.js","assets/animations/intro/mercury.jpg","components/visuals/animation0.js","components/visuals/graphics.js","components/Introduction.js","index.js"],"names":["App","className","React","Component","animation0","scene","camera","renderer","sun_light","THREE","position","set","castShadow","image_object","sphere_geometry","sphere_material","metalness","roughness","map","sphere_texture","load","sphere","add","animate","requestAnimationFrame","rotation","y","render","Introduction","starting_camera_pos","window","innerWidth","innerHeight","copy","setSize","shadowMap","enabled","type","setupScene","this","mount","appendChild","domElement","ref","ReactDOM","document","getElementById"],"mappings":"iRAaeA,E,4JATX,WACI,OACI,qBAAKC,UAAU,MAAf,SACI,cAAC,EAAD,U,GAJEC,IAAMC,W,eCHT,UAA0B,oCCwC1BC,MA9Bd,SAAoBC,EAAOC,EAAQC,GAChC,IAAMC,EAAY,IAAIC,IAAiB,SAAU,EAAG,EAAG,GACvDD,EAAUE,SAASC,IAAI,EAAE,EAAE,GAC3BH,EAAUI,YAAa,EAEvB,ICiBiBC,EDjBXC,EAAkB,IAAIL,IAA2B,EAAG,GAAI,IACxDM,EAAkB,IAAIN,IAA2B,CACnDO,UAAW,GACXC,UAAW,GACXC,KCaaL,EDbIM,GCcC,IAAIV,KACIW,KAAKP,MDb7BQ,EAAS,IAAIZ,IAAWK,EAAiBC,GAC/CM,EAAOX,SAASC,IAAI,EAAE,EAAE,GAExBN,EAAMiB,IAAId,GACVH,EAAMiB,IAAID,GAKV,SAASE,IACLC,sBAAsBD,GAEtBF,EAAOI,SAASC,GAAK,KAErBnB,EAASoB,OAAOtB,EAAOC,GAE3BiB,IEdWK,E,uKAjBX,WACI,MDER,SAAoBC,GAEhB,IAAMxB,EAAQ,IAAII,IAGZH,EAAS,IAAIG,IAAwB,GAAIqB,OAAOC,WAAWD,OAAOE,YAAa,GAAtE,SAA2E,GAAI,KAC9F1B,EAAOI,SAASuB,KAAKJ,GAGrB,IAAMtB,EAAW,IAAIE,IAMrB,OALAF,EAAS2B,QAAQJ,OAAOC,WAAYD,OAAOE,aAE3CzB,EAAS4B,UAAUC,SAAU,EAC7B7B,EAAS4B,UAAUE,KAAO5B,IAEnB,CAACJ,EAAOC,EAAQC,GCjBe+B,CAAW,IAAI7B,IAAc,EAAE,EAAE,IAAnE,mBAAOJ,EAAP,KAAcC,EAAd,KAAsBC,EAAtB,KACAgC,KAAKC,MAAMC,YAAYlC,EAASmC,YAEhCtC,EAAWC,EAAOC,EAAQC,K,oBAG9B,WAAS,IAAD,OACJ,OACI,sBAAKN,UAAU,eAAf,UACI,qBAAKA,UAAU,yBAAyB0C,IAAK,SAAAA,GAAG,OAAK,EAAKH,MAAQG,KAClE,qBAAK1C,UAAU,oBAAf,gC,GAZWC,IAAMC,W,wBCCjCyC,IAASjB,OACL,cAAC,EAAD,IACAkB,SAASC,eAAe,W","file":"static/js/main.6bacf996.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Introduction } from \"./components.js\"\r\n\r\nclass App extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"app\">\r\n                <Introduction/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","export default __webpack_public_path__ + \"static/media/mercury.0f028ab2.jpg\";","import * as THREE from \"three\";\r\nimport { loadTexture } from \"./graphics.js\";\r\nimport sphere_texture from \"../../assets/animations/intro/mercury.jpg\";\r\n\r\n/**\r\n * Animation 0: The coming soon animation\r\n * @param scene the scene into which to render\r\n * @param camera the camera for the animation\r\n * @param renderer the renderer\r\n */\r\n function animation0(scene, camera, renderer){\r\n    const sun_light = new THREE.PointLight(0xffffff, 1, 0, 2);\r\n    sun_light.position.set(0,5,0);\r\n    sun_light.castShadow = true;\r\n        \r\n    const sphere_geometry = new THREE.SphereBufferGeometry(1, 80, 80);\r\n    const sphere_material = new THREE.MeshStandardMaterial({\r\n        metalness: 0.3,\r\n        roughness: 0.8,\r\n        map: loadTexture(sphere_texture)\r\n    })\r\n    const sphere = new THREE.Mesh(sphere_geometry, sphere_material);\r\n    sphere.position.set(0,0,0)\r\n\r\n    scene.add(sun_light);\r\n    scene.add(sphere);\r\n\r\n    /**\r\n     * animator\r\n     */\r\n    function animate(){\r\n        requestAnimationFrame(animate);\r\n\r\n        sphere.rotation.y += 0.005;\r\n\r\n        renderer.render(scene, camera);\r\n    };\r\n    animate();    \r\n}\r\n\r\nexport default animation0","import * as THREE from \"three\";\r\n\r\n/*ORIGINALLY FROM EOVISUALISER*/\r\n\r\n/**\r\n * Sets up scene with camera, and renderer \r\n * @param starting_camera_pos the starting y position of the camera\r\n * @return an array containing the scene, camera, renderer in that order\r\n */\r\nfunction setupScene(starting_camera_pos){\r\n    //setup new scene\r\n    const scene = new THREE.Scene();\r\n    \r\n    //setup camera\r\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth/window.innerHeight, 0.1, 10**10);\r\n    camera.position.copy(starting_camera_pos)\r\n\r\n    //setup renderer\r\n    const renderer = new THREE.WebGLRenderer();\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n\r\n    renderer.shadowMap.enabled = true;\r\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n\r\n    return [scene, camera, renderer]\r\n}\r\n\r\n/**\r\n * Loads a texture given an imported image object\r\n * @param {Image} image_object the image object\r\n * @return a texture object\r\n */\r\nfunction loadTexture(image_object){\r\n    const textureLoader = new THREE.TextureLoader();\r\n    const texture = textureLoader.load(image_object)\r\n\r\n    return texture\r\n}\r\n\r\nexport {\r\n    setupScene,\r\n    loadTexture\r\n}","import React from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { setupScene } from \"./visuals/graphics.js\";\r\nimport { animation0 } from \"./visuals/animations.js\";\r\n\r\nclass Introduction extends React.Component{\r\n    componentDidMount() {\r\n        const [scene, camera, renderer] = setupScene(new THREE.Vector3(0,0,2))\r\n        this.mount.appendChild(renderer.domElement);\r\n\r\n        animation0(scene, camera, renderer)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"introduction\">\r\n                <div className=\"introduction-animation\" ref={ref => (this.mount = ref)}/>\r\n                <div className=\"introduction-text\">Coming Soon</div>\r\n            </div>  \r\n        )\r\n    }\r\n}\r\n\r\nexport default Introduction","import ReactDOM from \"react-dom\";\r\n\r\nimport { App } from './components/components.js'\r\n\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}