{"version":3,"sources":["components/App.js","components/Header.js","assets/animations/0/mercury.jpg","components/visuals/animation0.js","assets/animations/1/mountainrange2.glb","assets/animations/1/train1.glb","assets/animations/1/traincarriage1.glb","components/visuals/animation1.js","components/Introduction.js","components/visuals/graphics.js","index.js"],"names":["App","className","React","Component","Header","animation0","animation1","scene","camera","renderer","sphere_geometry","THREE","small_sphere_geometry","plane_geometry","sky_material","color","sky","position","set","global_offset","add","star_material","stars","i","star","x","randFloatSpread","y","z","push","point_light","ambient_light","moon_material","transparent","moon","scale","loader","GLTFLoader","load","mountains_model","mountains_gltf","mountains","rotation","Math","PI","water","Water","sunColor","waterColor","distortionScale","train_x_0","train_load","train","train_model","train_gltf","traincarriages_load","traincarriages","traincarriage_model","traincarriage_gltf","traincarriage","clone","animate","requestAnimationFrame","time","performance","now","sin","j","k","render","Introduction","starting_camera_pos","window","innerWidth","innerHeight","copy","setSize","setPixelRatio","devicePixelRatio","shadowMap","enabled","type","setupScene","this","mount","appendChild","domElement","ref","ExpandMore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d96bae3c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Header, Introduction } from \"./components.js\";\r\nimport {BrowserView, MobileView} from 'react-device-detect';\r\n\r\nclass App extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"app\">\r\n                <BrowserView>\r\n                    <Header/>\r\n                    <Introduction/>\r\n                </BrowserView>\r\n                <MobileView>\r\n                    \r\n                </MobileView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React from \"react\";\r\n\r\nclass Header extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"header\">\r\n                <div className=\"header-name\">AP</div>\r\n            </div>  \r\n        )\r\n    }\r\n}\r\n\r\nexport default Header","export default __webpack_public_path__ + \"static/media/mercury.0f028ab2.jpg\";","import * as THREE from \"three\";\r\nimport { loadTexture } from \"./graphics.js\";\r\nimport sphere_texture from \"../../assets/animations/0/mercury.jpg\";\r\n\r\n/**\r\n * Animation 0: The coming soon animation\r\n * @param scene the scene into which to render\r\n * @param camera the camera for the animation\r\n * @param renderer the renderer\r\n */\r\n function animation0(scene, camera, renderer){\r\n    const sun_light = new THREE.PointLight(0xffffff, 1, 0, 2);\r\n    sun_light.position.set(0,5,0);\r\n    sun_light.castShadow = true;\r\n        \r\n    const sphere_geometry = new THREE.SphereBufferGeometry(1, 80, 80);\r\n    const sphere_material = new THREE.MeshStandardMaterial({\r\n        metalness: 0.3,\r\n        roughness: 0.8,\r\n        map: loadTexture(sphere_texture)\r\n    })\r\n    const sphere = new THREE.Mesh(sphere_geometry, sphere_material);\r\n    sphere.position.set(0,0,0)\r\n\r\n    scene.add(sun_light);\r\n    scene.add(sphere);\r\n\r\n    /**\r\n     * animator\r\n     */\r\n    function animate(){\r\n        requestAnimationFrame(animate);\r\n\r\n        sphere.rotation.y += 0.005;\r\n\r\n        renderer.render(scene, camera);\r\n    };\r\n    animate();    \r\n}\r\n\r\nexport default animation0","export default __webpack_public_path__ + \"static/media/mountainrange2.d86e1c55.glb\";","export default __webpack_public_path__ + \"static/media/train1.e4620fed.glb\";","export default __webpack_public_path__ + \"static/media/traincarriage1.35cd8273.glb\";","import * as THREE from \"three\";\r\nimport { Water } from 'three/examples/jsm/objects/Water.js';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\r\nimport mountains_model from '../../assets/animations/1/mountainrange2.glb';\r\nimport train_model from '../../assets/animations/1/train1.glb';\r\nimport traincarriage_model from '../../assets/animations/1/traincarriage1.glb';\r\n\r\n/**\r\n * Animation 1: Train Animation\r\n * @param scene the scene into which to render\r\n * @param camera the camera for the animation\r\n * @param renderer the renderer\r\n */\r\n function animation1(scene, camera, renderer){     \r\n    const global_offset = -20;\r\n\r\n    //create reusable geometries\r\n    const sphere_geometry = new THREE.SphereBufferGeometry(30, 50, 50);\r\n    const small_sphere_geometry = new THREE.SphereBufferGeometry(0.3, 4, 4);\r\n    const plane_geometry = new THREE.PlaneBufferGeometry(1000, 1000, 300, 300);\r\n\r\n    //create sky\r\n    const sky_color = 0x050713;\r\n\r\n    const sky_material = new THREE.MeshBasicMaterial({color: sky_color})\r\n    const sky = new THREE.Mesh(plane_geometry, sky_material);\r\n    sky.position.set(0,0,global_offset-200);\r\n    scene.add(sky);\r\n\r\n    //create stars\r\n    const no_stars = 800;\r\n\r\n    const star_material = new THREE.MeshBasicMaterial({color: 0xffffff});\r\n    const stars = [];\r\n    for (let i = 0; i < no_stars; i++) {\r\n        const star = new THREE.Mesh(small_sphere_geometry, star_material);\r\n        const x = THREE.MathUtils.randFloatSpread(500);\r\n        const y = THREE.MathUtils.randFloatSpread(200) + 100;\r\n        const z = THREE.MathUtils.randFloatSpread(100) - 100;\r\n        star.position.set(x,y,z);\r\n        stars.push(star);\r\n        scene.add(star);\r\n    }\r\n    \r\n    //create point light\r\n    const point_light = new THREE.PointLight(0xffffff,1,0,2);\r\n    point_light.position.set(80,80,global_offset-60);\r\n    scene.add(point_light);\r\n\r\n    //create ambient light\r\n    const ambient_light = new THREE.PointLight(0xffffff,0.2,0,2);\r\n    ambient_light.position.set(80,80,global_offset+10);\r\n    scene.add(ambient_light);\r\n\r\n    //create moon\r\n    var moon_y_0 = 80;\r\n    var moon_x_0 = 110;\r\n    var moon_color = 0xffffff\r\n\r\n    const moon_material = new THREE.MeshBasicMaterial({\r\n        color: moon_color,\r\n        transparent: true,});\r\n    const moon = new THREE.Mesh(sphere_geometry, moon_material);\r\n    moon.scale.set(0.8, 0.8, 0.8);\r\n    moon.position.set(moon_x_0,moon_y_0,global_offset-80);\r\n    scene.add(moon);\r\n\r\n    //create mountains \r\n    const loader = new GLTFLoader();\r\n    loader.load(mountains_model, function (mountains_gltf) {\r\n        var mountains = mountains_gltf.scene;\r\n        mountains.position.set(0,-25,global_offset-40);\r\n        mountains.rotation.set(0,-Math.PI/2,0);\r\n        mountains.scale.set(8,10,13);\r\n        scene.add(mountains);\r\n    });\r\n\r\n    //create ocean\r\n    var water_y_0 = -10;\r\n\r\n    const water = new Water(\r\n        plane_geometry,\r\n        {\r\n            sunColor: 0xffffff,\r\n            waterColor: 0x00000d,\r\n            distortionScale: 3.7\r\n        }\r\n    );\r\n    water.position.set(0,water_y_0,0);\r\n    water.rotation.set(- Math.PI/2,0,0);\r\n    scene.add(water);\r\n\r\n    //create train\r\n    var train_x_0 = -250;\r\n    var no_traincarriages = 6;\r\n    var train_sep = 5;\r\n    var traincarriage_sep = 8;\r\n\r\n    var train_load = false;\r\n    var train = 0;\r\n    loader.load(train_model, function (train_gltf) {\r\n        train = train_gltf.scene;\r\n        train.position.set(train_x_0,26,global_offset-18);\r\n        train.rotation.set(0,Math.PI/2,0);\r\n        train.scale.set(1,1,1);\r\n        scene.add(train);\r\n        train_load = true;\r\n    });  \r\n\r\n    var traincarriages_load = false;\r\n    var traincarriages = [];\r\n    loader.load(traincarriage_model, function (traincarriage_gltf) {\r\n        var traincarriage = traincarriage_gltf.scene;\r\n        for (var i = 0; i < no_traincarriages; i++){\r\n            traincarriages[i] = traincarriage.clone();\r\n            traincarriages[i].position.set(train_x_0-train_sep-i*traincarriage_sep,26,global_offset-18);\r\n            traincarriages[i].rotation.set(0, Math.PI/2, 0);\r\n            traincarriages[i].scale.set(1,1,2);\r\n            scene.add(traincarriages[i]);\r\n        }\r\n        traincarriages_load = true;\r\n    });  \r\n\r\n    /**\r\n     * animator\r\n     */\r\n    function animate(){\r\n        requestAnimationFrame(animate);\r\n\r\n        const time = performance.now()*0.001;\r\n        \r\n        //bobbing moon and water\r\n        moon.position.y = -Math.sin(0.35*time)*5 + moon_y_0;\r\n        water.position.y = Math.sin(0.25*time)*2 + water_y_0; //twinkling stars\r\n\r\n        //moving train\r\n        var train_v = 1;\r\n\r\n        if (train_load & traincarriages_load) {\r\n            train.position.x += train_v;\r\n            for (var j = 0; j < no_traincarriages; j++){\r\n                traincarriages[j].position.x += train_v;\r\n            }\r\n\r\n            //wrap around\r\n            if (train.position.x > -train_x_0){\r\n                train.position.x = train_x_0;\r\n                for (var k = 0; k < no_traincarriages; k++){\r\n                    traincarriages[k].position.x = train_x_0-train_sep-k*traincarriage_sep;\r\n                }\r\n            }\r\n        }\r\n\r\n        renderer.render(scene, camera);\r\n    };\r\n    animate();    \r\n}\r\n\r\nexport default animation1","import React from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { setupScene } from \"./visuals/graphics.js\";\r\nimport { animation1 } from \"./visuals/animations.js\";\r\nimport { ExpandMore } from '@material-ui/icons';\r\n\r\nclass Introduction extends React.Component{\r\n    componentDidMount() {\r\n        const [scene, camera, renderer] = setupScene(new THREE.Vector3(0,0,75))\r\n        this.mount.appendChild(renderer.domElement);\r\n        camera.position.y += 15;\r\n\r\n        animation1(scene, camera, renderer)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"introduction\">\r\n                <div className=\"introduction-hi\">Hi, I'm</div>\r\n                <div className=\"introduction-name\">Abhijit Pandit</div>\r\n                <div className=\"introduction-tagline\">An Aspiring Space Engineer and Creative</div>\r\n                <div className=\"introduction-animation\" ref={ref => (this.mount = ref)}/>\r\n                <div className=\"introduction-darkeningfilter\"></div>\r\n                <div className=\"introduction-expandcontainer\">\r\n                    <div>Coming Soon</div> \r\n                    <ExpandMore className=\"introduction-expand\"/>\r\n                </div>\r\n            </div>  \r\n        )\r\n    }\r\n}\r\n\r\nexport default Introduction","import * as THREE from \"three\";\r\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls.js';\r\n\r\n/*ORIGINALLY FROM EOVISUALISER*/\r\n\r\n/**\r\n * Sets up scene with camera, and renderer \r\n * @param starting_camera_pos the starting y position of the camera\r\n * @return an array containing the scene, camera, renderer in that order\r\n */\r\nfunction setupScene(starting_camera_pos){\r\n    //setup new scene\r\n    const scene = new THREE.Scene();\r\n    \r\n    //setup camera\r\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth/window.innerHeight, 0.1, 10**10);\r\n    camera.position.copy(starting_camera_pos)\r\n\r\n    //setup renderer\r\n    const renderer = new THREE.WebGLRenderer();\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n\r\n    renderer.shadowMap.enabled = true;\r\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n\r\n    //const controls = new OrbitControls(camera, renderer.domElement);\r\n    //controls.update();\r\n\r\n    return [scene, camera, renderer]\r\n}\r\n\r\n/**\r\n * Loads a texture given an imported image object\r\n * @param {Image} image_object the image object\r\n * @return a texture object\r\n */\r\nfunction loadTexture(image_object){\r\n    const textureLoader = new THREE.TextureLoader();\r\n    const texture = textureLoader.load(image_object)\r\n\r\n    return texture\r\n}\r\n\r\nexport {\r\n    setupScene,\r\n    loadTexture,\r\n}","import ReactDOM from \"react-dom\";\r\nimport { App } from './components/components.js';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}